before:
  hooks:
    - go install github.com/mitchellh/golicense
    - go run cmd/swagger/main.go containerssh-authconfig-openapi.json
    - go test
builds:
  - id: containerssh-linux
    main: cmd/containerssh/main.go
    binary: "containerssh"
    goos:
      - linux
    goarch:
      - amd64
    env:
      - CGO_ENABLED=0
    hooks:
      post:
        - cmd: go run cmd/license-report/main.go golicense.json build/containerssh-linux_linux_amd64/containerssh NOTICE.md
          dir: "{{ dir .Path }}/../../"
  - id: containerssh-windows
    main: cmd/containerssh/main.go
    binary: "containerssh"
    goos:
      - windows
    goarch:
      - amd64
    env:
      - CGO_ENABLED=0
  - id: containerssh-darwin
    main: cmd/containerssh/main.go
    binary: "containerssh"
    goos:
      - darwin
    goarch:
      - amd64
    env:
      - CGO_ENABLED=0
  - id: containerssh-auditlog-decoder
    main: cmd/containerssh-auditlog-decoder/main.go
    binary: "containerssh-auditlog-decoder"
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
    env:
      - CGO_ENABLED=0
  - id: containerssh-testauthconfigserver
    main: cmd/containerssh-testauthconfigserver/main.go
    binary: "containerssh-testauthconfigserver"
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
    env:
      - CGO_ENABLED=0
archives:
  - builds:
      - containerssh-linux
      - containerssh-windows
      - containerssh-darwin
      - containerssh-auditlog-decoder
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE.md
      - NOTICE.md
      - config.example.yaml
dockers:
  - goos: linux
    goarch: amd64
    ids:
      - containerssh-linux
    image_templates:
      - "containerssh/containerssh:latest"
      - "containerssh/containerssh:{{ .Major }}.{{ .Minor }}"
      - "containerssh/containerssh:{{ .Tag }}"
      - "docker.pkg.github.com/containerssh/containerssh/containerssh:latest"
      - "docker.pkg.github.com/containerssh/containerssh/containerssh:{{ .Major }}.{{ .Minor }}"
      - "docker.pkg.github.com/containerssh/containerssh/containerssh:{{ .Tag }}"
      - "quay.io/containerssh/containerssh:latest"
      - "quay.io/containerssh/containerssh:{{ .Major }}.{{ .Minor }}"
      - "quay.io/containerssh/containerssh:{{ .Tag }}"
    dockerfile: Dockerfile.goreleaser
    extra_files:
      - LICENSE.md
      - NOTICE.md
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name=ContainerSSH"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.documentation=https://containerssh.io"
    skip_push: auto
  - goos: linux
    goarch: amd64
    ids:
      - containerssh-testauthconfigserver
    image_templates:
      - "containerssh/containerssh-test-authconfig:latest"
      - "containerssh/containerssh-test-authconfig:{{ .Major }}.{{ .Minor }}"
      - "containerssh/containerssh-test-authconfig:{{ .Tag }}"
      - "docker.pkg.github.com/containerssh/containerssh/containerssh-test-authconfig:latest"
      - "docker.pkg.github.com/containerssh/containerssh/containerssh-test-authconfig:{{ .Major }}.{{ .Minor }}"
      - "docker.pkg.github.com/containerssh/containerssh/containerssh-test-authconfig:{{ .Tag }}"
      - "quay.io/containerssh/containerssh-test-authconfig:latest"
      - "quay.io/containerssh/containerssh-test-authconfig:{{ .Major }}.{{ .Minor }}"
      - "quay.io/containerssh/containerssh-test-authconfig:{{ .Tag }}"
    dockerfile: Dockerfile-testauthconfigserver.goreleaser
    extra_files:
      - LICENSE.md
      - NOTICE.md
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name=ContainerSSH Auth-Config Server"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.documentation=https://containerssh.io"
    skip_push: auto
nfpms:
  - vendor: ContainerSSH
    homepage: https://containerssh.io
    maintainer: Janos Pasztor <handshake@containerssh.io>
    description: An SSH server that launches Docker containers and Kubernetes pods
    license: MIT
    builds:
      - containerssh-linux
      - containerssh-testauthconfigserver
      - containerssh-auditlog-decoder
    formats:
      - deb
      - rpm
    empty_folders:
      - /etc/containerssh
    bindir: /usr/sbin
    suggests:
      - docker
    contents:
      - src: config.example.yaml
        dst: /etc/containerssh/config.yaml
        type: config
      - src: LICENSE.md
        dst: /usr/share/doc/containerssh/LICENSE.md
signs:
  - id: sign-all
    artifacts: all
source:
  enabled: true
  name_template: '{{ .ProjectName }}-{{ .Version }}-source'
dist: build
release:
  github:
    owner: containerssh
    name: containerssh
  prerelease: auto
  extra_files:
    - glob: LICENSE.md
    - glob: NOTICE.md
    - glob: containerssh-authconfig-openapi.json
